name: Build Universal Wheel

on:
  push:
    branches: [ master,update ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            TARGET: ubuntu
            CMD_BUILD: python -m build --wheel

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
            pip install --upgrade pip
            pip install build

      - name: Built wheel for ${{matrix.TARGET}}
        run: ${{matrix.CMD_BUILD}}

      - name: Upload Python wheel
        uses: actions/upload-artifact@v4
        with:
          name: Python wheel
          path: ${{github.workspace}}/dist/raidionicsval-*.whl
          if-no-files-found: error

  setup-test-data:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: Download test resources
        working-directory: tests
        run: |
            pip install requests
            python -c "from download_resources import download_resources; download_resources('../test_data')"

      - name: Upload test resources
        uses: actions/upload-artifact@v4
        with:
          name: test-resources
          path: ./test_data
  test:
    needs: [build, setup-test-data]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            python-version: "3.8"
          - os: ubuntu-22.04
            python-version: "3.9"
          - os: ubuntu-22.04
            python-version: "3.10"
          - os: ubuntu-22.04
            python-version: "3.11"
          - os: ubuntu-22.04
            python-version: "3.12"
          - os: ubuntu-24.04
            python-version: "3.8"
          - os: ubuntu-24.04
            python-version: "3.9"
          - os: ubuntu-24.04
            python-version: "3.10"
          - os: ubuntu-24.04
            python-version: "3.11"
          - os: ubuntu-24.04
            python-version: "3.12"
          - os: windows-2019
            python-version: "3.8"
          - os: windows-2019
            python-version: "3.9"
          - os: windows-2019
            python-version: "3.10"
          - os: windows-2019
            python-version: "3.11"
          - os: windows-2019
            python-version: "3.12"
          - os: windows-2022
            python-version: "3.8"
          - os: windows-2022
            python-version: "3.9"
          - os: windows-2022
            python-version: "3.10"
          - os: windows-2022
            python-version: "3.11"
          - os: windows-2022
            python-version: "3.12"
          - os: macos-13
            python-version: "3.8"
          - os: macos-13
            python-version: "3.9"
          - os: macos-13
            python-version: "3.10"
          - os: macos-13
            python-version: "3.11"
          - os: macos-13
            python-version: "3.12"
          - os: macos-14
            python-version: "3.10"
          - os: macos-14
            python-version: "3.11"
          - os: macos-15
            python-version: "3.10"
          - os: macos-15
            python-version: "3.11"

    steps:
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v5
          with:
            python-version: ${{ matrix.python-version }}

        - name: Download artifact
          uses: actions/download-artifact@v4
          with:
            name: "Python wheel"

        - name: Install wheel
          run: |
              python -m pip install --upgrade pip
              pip install --find-links=${{github.workspace}} --no-cache-dir --force-reinstall raidionicsval-*
          shell: bash

        - name: Test CLI
          run: raidionicsseg --help

        - name: Clone repo
          uses: actions/checkout@v4

        - name: Download test resources
          uses: actions/download-artifact@v4
          with:
            name: test-resources
            path: ./tests/unit_tests_results_dir

        - name: Integration tests
          run: |
              pip install pytest pytest-cov pytest-timeout requests
              pytest -vvv --cov=raidionicsval ${{github.workspace}}/tests/generic_tests --cov-report=xml --timeout=1000 --log-cli-level=DEBUG

        - name: Upload coverage to Codecov
          if: ${{ matrix.os == 'ubuntu-22.04' && matrix.python-version == '3.9' }}
          uses: codecov/codecov-action@v4
          with:
            token: ${{ secrets.CODECOV_TOKEN  }}
            slug: dbouget/validation_metrics_computation
            verbose: true