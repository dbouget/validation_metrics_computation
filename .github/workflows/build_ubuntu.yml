name: Build Ubuntu

on:
  push:
    branches:
      - '*'
  pull_request:
    branches: [master, release]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            TARGET: ubuntu
            CMD_BUILD: python setup.py bdist_wheel --plat-name manylinux1_x86_64
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Collect submodules
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel setuptools

      - name: Built wheel for ${{matrix.TARGET}}
        run: ${{matrix.CMD_BUILD}}

      - name: Upload Python wheel
        uses: actions/upload-artifact@v4
        with:
          name: Python wheel
          path: ${{github.workspace}}/dist/raidionicsval-*.whl
          if-no-files-found: error

  test:
    needs: build
    strategy:
      matrix:
        os: [ ubuntu-20.04, ubuntu-22.04, ubuntu-24.04 ]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: "Python wheel"

      - name: Install wheel
        run: pip install --find-links=${{github.workspace}} raidionicsval-*
        shell: bash

      - name: Test CLI
        run: raidionicsval --help

      - name: Clone repo
        uses: actions/checkout@v1

      - name: k-fold cross-validation unit test
        run: cd ${{github.workspace}}/tests && python test_validation_pipeline.py

      - name: Segmentation study unit test
        run: cd ${{github.workspace}}/tests && python studies_pipeline_test.py